Ergebnisse Brainstorming 3.11.

1. Produktübersicht:
Name: De(r)bugger
Text aus PSE Aufgabenbeschreibung abwandeln

2. Zielbestimmung:
Muss: Interpreter für festgelegte Sprache
Custom GUI Design
variable Stepsize
allg. Debugger Fähigkeiten: Werte des Variablen zu jedem Zeitpunkt anzeigen,
davon abhängige Breakpoints (zb wenn a = b stop)
zu debuggendes Programm ist .txt
Soll: Konfigurationsdatei für einen Lauf / Lauf speichern
Programm schlägt Stepsize abhängig von Zeilen der Programme vor
zu debuggendes Programm einbinden durch reinziehen, reinkopieren und .txt öffnen
Tooltips
Input von Variablen kann zufällig verändert werden
austauschbarer Interpreter für andere Sprachen
mehr als 2 Programme debuggen
Kann: Programm in versch Sprachen (zumindest Englisch)
variable Fenster (rausziehen etc)
Vroschläge für Assertions (-> Benutzerfreundlichtkeit)
hier fehlt: was kann die Sprache, Abgrenzungskriterien

3. Produkteinsatz:
Institut, Hilfe bei beweisen

4. Produktumgebung:
Java- Programm, keine besondere Hardware benötigt
zu beschreibende Schnittstellen: GUI, Interpreter

5. Funktionale Anforderungen:

6. Produktdaten: 
zu speichern: Programmläufe, Konfigurationsdaten

7. produktleistungen: 
Zeit und Genauigkeit?

8. Nichtfunktionale Anforderungen:
Gesetze? Normen? Sicherheit? Urheberrecht?
keine Plattformabhängigkeit durch Java 

9. Qualitätsanforderungen: 

10. Globale Testfälle und Szenarien:
Form: Eingabe - erwartete Ausgabe
GUI-Testfälle

11. Systemmodelle:

12. Benutzungsoberfläche:
Skizze
Menüs? mehrere Programme?

13. Spezielle Anforderungen an Entwicklungsumgebung:

14. Zeit und Ressourcenplanung:

15. Ergänzungen:

16. Glossar

Was soll die Sprache können?
Java Teilmenge
Methoden /Funktionen
Arrays, Operationen für Arrays
primitive Datentypen
while
if
+-*:
Rückgabewert
Kann: Strings for max()/min() System.out. (Konsole benötigt)

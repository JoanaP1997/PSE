<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1524</x>
      <y>108</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>TraceIterator
--

--
getIterator(): TraceIterator
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>684</x>
      <y>330</y>
      <w>192</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>TypeCheckVisitor
--

--
+visit(ParseTree p) 
...
Aufgabe: Sichert zu jeder Variablen den 
Typ und prueft auf Fehler wie: 
boolean x = 10.4f;
oder falschtypisierte return Statements
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>372</x>
      <y>180</y>
      <w>216</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>GenerationController
--
Map&lt;String,Command&gt; routine
Stack&lt;Scope&gt; stack
--
+generateTrace(String text): TraceIterator
+getCurrentScope():Scope
+pushScope(Scope scope)
+popScope():Scope scope //Konvention
+setReturnValue(TermValue value)
+getReturnValue():TermValue
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>684</x>
      <y>114</y>
      <w>162</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>CommandGenVisitor
--

--
+visit(ParseTree t):Command
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>240</y>
      <w>186</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>/Command/
--

--
/+run(): List&lt;TraceState&gt; /


TODO: Konstruktor nimmt GenerationController entgegen
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1326</x>
      <y>108</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>Trace
--

--
getIterator(): TraceIterator

TODO: Rest des Patterns...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>582</x>
      <y>240</y>
      <w>114</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ruft auf &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;260.0;170.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>582</x>
      <y>150</y>
      <w>114</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ruft auf &gt;</panel_attributes>
    <additional_attributes>10.0;110.0;80.0;110.0;80.0;10.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1446</x>
      <y>150</y>
      <w>90</w>
      <h>24</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1284</x>
      <y>300</y>
      <w>204</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>TraceState
--
- Map&lt;String, TermValue&gt; vars
--
+getValueOf(String identifier): TermValue
+getPostion(): TracceStatePosition
+getLineNumber(): int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1380</x>
      <y>216</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>138</y>
      <w>498</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-
fuettert mit Commands &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;810.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>186</y>
      <w>132</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-
m2=*
erzeugt &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0;110.0;170.0;200.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>186</y>
      <w>198</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
&lt; fuehrt aus</panel_attributes>
    <additional_attributes>10.0;180.0;60.0;180.0;60.0;10.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>846</x>
      <y>762</y>
      <w>156</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Assignment
--
- identifier :String
--
run(TraceState t): TraceState 
...
gibt es x?
Welchen Typ hat x, und passt der Typ von term zu typ von x?</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>462</y>
      <w>150</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>WhileCommand
--

--
run(): TraceState 
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>900</x>
      <y>348</y>
      <w>150</w>
      <h>426</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;230.0;130.0;10.0;130.0;10.0;690.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1032</x>
      <y>348</y>
      <w>102</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0;150.0;130.0;150.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>306</y>
      <w>96</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=*
r2=children</panel_attributes>
    <additional_attributes>30.0;360.0;140.0;360.0;140.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>156</y>
      <w>498</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-
erzeugt &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;810.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>48</x>
      <y>12</y>
      <w>288</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Patterns: Command, Kompositum, Visitor, Iterator, (Memento)

TODO: Bedingungskompositum an IF und WHILE angebunden.. Auch fuer WE verwenden? Irgendiwe bloed</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>414</x>
      <y>432</y>
      <w>102</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>AntlrParser.ParseTree</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>396</x>
      <y>36</y>
      <w>174</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>Some Class of Debugger</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>288</y>
      <w>78</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

verarbeitet v</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>204</x>
      <y>186</y>
      <w>150</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>let Antlr generate ParseTree p from /text/
typeCheckVisitor.visit(p);
//if no WrongTypeException
Trace t = commandGenVisitor.visit(p);
return t.getIterator();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>48</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
nutzt v</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>606</y>
      <w>228</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>SymbolTable
--
- : HashMap&lt;String,int&gt; 
-
+registerName(String name, int datatype):int
+getId(String name)
+getDatatype(String name): int

TODO: Wo anbindung an erzeuguhngsprozess?
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>738</x>
      <y>438</y>
      <w>18</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;280.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>348</x>
      <y>210</y>
      <w>240</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.()</panel_attributes>
    <additional_attributes>10.0;40.0;380.0;40.0;380.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1002</x>
      <y>972</y>
      <w>174</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>Declaration
--
- identifier: String

--
run(TraceState t): TraceState 
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1332</x>
      <y>996</y>
      <w>60</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
Type
--
Nop</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>1014</y>
      <w>174</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>270.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1452</x>
      <y>540</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>/Condition/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>546</y>
      <w>312</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>500.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1848</x>
      <y>156</y>
      <w>66</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lw=2
ActiveClass</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1764</x>
      <y>84</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>/AbstractClass/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1458</x>
      <y>1014</y>
      <w>90</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>MainCommand</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1104</x>
      <y>804</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>/Term/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>996</x>
      <y>804</y>
      <w>120</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1488</x>
      <y>432</y>
      <w>96</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
TraceStatePosition
--
AFTERRETURN
AFTERFUNCCALL</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1482</x>
      <y>378</y>
      <w>66</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1248</x>
      <y>570</y>
      <w>150</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>IfCommand
--

--
run(TraceState t): TraceState 
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1224</x>
      <y>870</y>
      <w>174</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>DeclarationAssignment
--
- identifier: String

--
run(TraceState t): TraceState 
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1482</x>
      <y>894</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>/Term/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1392</x>
      <y>894</y>
      <w>102</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1554</x>
      <y>852</y>
      <w>60</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
Type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1392</x>
      <y>870</y>
      <w>174</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>270.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>642</x>
      <y>792</y>
      <w>156</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>Scope
--
Map&lt;String,TermValue&gt; values
Map&lt;String,Type&gt;  types
--
getValue ... </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>246</x>
      <y>774</y>
      <w>288</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>0. Phase: TypeChecking
1. Phase: Alle Routinen trennen und Rückgabetyp speichern
2. Phase: Fuer jede Routine wird CommandBaum erzeugt
3. Phase: Stack aus Scopes: Mainbaum ausfuehren, dieser holt
sich bei Funktionsaufruf den entsprechenden Funktionsbaum. Daten holt er aus dem currentScope.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>582</x>
      <y>228</y>
      <w>390</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;
m2=*
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;280.0;10.0;280.0;140.0;630.0;140.0</additional_attributes>
  </element>
</diagram>
